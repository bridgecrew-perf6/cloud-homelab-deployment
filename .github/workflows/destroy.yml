name: destroy
on: [workflow_dispatch]

jobs:
  aws:
    name: Deploy To AWS
    environment:
      name: aws
    runs-on: ubuntu-latest


    steps:
    - uses: hashicorp/setup-terraform@v1

    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Get State
      run: |
        cd terraform
        aws s3 sync s3://horvatic-bucket .

    - name: Save Secrets
      env: 
        VPC_ID: ${{ secrets.AWS_VPC_ID }}
        CLUSTER_NAME: ${{ secrets.AWS_CLUSTER_NAME }}
        SECURITY_GROUP: ${{ secrets.AWS_SECURITY_GROUP }}
        REGION: ${{ secrets.AWS_REGION }}
      run: |
          envsubst < terraform/main.tf > tempsecret
          cat tempsecret > terraform/main.tf
          rm tempsecret

    - name: Terraform Init
      env:
        TF_ACTION_WORKING_DIR: 'terraform'
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
          cd terraform
          terraform init

    - name: Terraform Remove Permanent Resources From State
      env:
        TF_ACTION_WORKING_DIR: 'terraform'
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
          cd terraform
          cp terraform.tfstate tempstate
          terraform state rm aws_ecs_task_definition.task

    - name: Terraform Destroy
      env:
        TF_ACTION_WORKING_DIR: 'terraform'
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
          cd terraform
          terraform destroy -auto-approve

    - name: Terraform Add Permanent Resources To State
      env:
        TF_ACTION_WORKING_DIR: 'terraform'
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
          cd terraform
          export IMPORTSERVICE="$(cat tempstate | grep -o "arn:aws:ecs:.*:task-definition/service:.*" | head -1 | sed 's/",//g')"
          terraform import aws_ecs_task_definition.task "${IMPORTSERVICE}"
          rm -f tempstate

    - name: Publish State
      run: |
        aws s3 sync terraform s3://horvatic-bucket --exclude "*" --include "terraform.tfstate"